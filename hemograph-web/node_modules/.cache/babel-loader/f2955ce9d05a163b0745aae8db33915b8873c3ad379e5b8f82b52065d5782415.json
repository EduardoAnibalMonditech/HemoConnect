{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3000'\n});\nexport const login = async dados => {\n  try {\n    const response = await api.post('/auth/login', dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const registrarBancoSangue = async dados => {\n  try {\n    const response = await api.post('/cadastro/bancos-sangue/registro', dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const registrarDoador = async dados => {\n  try {\n    const response = await api.post('/cadastro/doadores/registro', dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\n\n// Serviços para Necessidades de Sangue\nexport const criarNecessidadeSangue = async dados => {\n  try {\n    const response = await api.post('/necessidades-sangue/registro', dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const listarNecessidadesSangue = async () => {\n  try {\n    const response = await api.get('/necessidades-sangue');\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const buscarNecessidadesPorTipo = async tipoSanguineo => {\n  try {\n    const response = await api.get(`/necessidades-sangue/tipo/${tipoSanguineo}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const buscarNecessidadesPorBanco = async bancoId => {\n  try {\n    const response = await api.get(`/necessidades-sangue/banco/${bancoId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const atualizarStatusNecessidade = async (id, status) => {\n  try {\n    const response = await api.patch(`/necessidades-sangue/${id}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const atualizarNecessidade = async (id, dados) => {\n  try {\n    const response = await api.put(`/necessidades-sangue/${id}`, dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport const excluirNecessidade = async id => {\n  try {\n    const response = await api.delete(`/necessidades-sangue/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro na API:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","login","dados","response","post","data","error","console","registrarBancoSangue","registrarDoador","criarNecessidadeSangue","listarNecessidadesSangue","get","buscarNecessidadesPorTipo","tipoSanguineo","buscarNecessidadesPorBanco","bancoId","atualizarStatusNecessidade","id","status","patch","atualizarNecessidade","put","excluirNecessidade","delete"],"sources":["C:/Users/mauri/Documents/HemoGraph/hemograph-web/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3000'\r\n});\r\n\r\nexport const login = async (dados) => {\r\n  try {\r\n    const response = await api.post('/auth/login', dados);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const registrarBancoSangue = async (dados) => {\r\n  try {\r\n    const response = await api.post('/cadastro/bancos-sangue/registro', dados);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const registrarDoador = async (dados) => {\r\n  try {\r\n    const response = await api.post('/cadastro/doadores/registro', dados);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Serviços para Necessidades de Sangue\r\nexport const criarNecessidadeSangue = async (dados) => {\r\n  try {\r\n    const response = await api.post('/necessidades-sangue/registro', dados);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const listarNecessidadesSangue = async () => {\r\n  try {\r\n    const response = await api.get('/necessidades-sangue');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const buscarNecessidadesPorTipo = async (tipoSanguineo) => {\r\n  try {\r\n    const response = await api.get(`/necessidades-sangue/tipo/${tipoSanguineo}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const buscarNecessidadesPorBanco = async (bancoId) => {\r\n  try {\r\n    const response = await api.get(`/necessidades-sangue/banco/${bancoId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const atualizarStatusNecessidade = async (id, status) => {\r\n  try {\r\n    const response = await api.patch(`/necessidades-sangue/${id}/status`, { status });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const atualizarNecessidade = async (id, dados) => {\r\n  try {\r\n    const response = await api.put(`/necessidades-sangue/${id}`, dados);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const excluirNecessidade = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/necessidades-sangue/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro na API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}